services:
  book-api:
    image: book-api
    build:
      context: ./src
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - book-api-network
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: "http://0.0.0.0:3000"
      ConnectionStrings__DefaultConnection: Host=db; Port=5432; Database = BookDB; Trust Server Certificate = true; Username=danny; Password=${DB_PASS}
  
  db:
    image: postgres:latest
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - /srv/postgres/data:/var/lib/postgresql/data
    networks:
      - book-api-network
    environment:
      POSTGRES_USER: "danny"
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: "BookDB"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-proxy.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - book-api-network
    depends_on:
      - db
      - book-api

networks:
  book-api-network:
    driver: bridge